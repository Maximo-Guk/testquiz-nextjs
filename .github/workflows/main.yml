name: testquiz nextjs CI/CD Workflow
on:
  push:
    branches: [master]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache .pnpm-store
      uses: actions/cache@v2
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Install pnpm
      run: curl -f https://get.pnpm.io/v6.js | node - add --global pnpm@6
    - name: pnpm Build
      run: pnpm install
    - name: Cache Next.js Build
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
    - name: Next.js Build App
      run: pnpm run build
    - name: Next.js Export App to Static HTML
      run: pnpm run export
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        name: Compiled-App
        path: out/**
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: Compiled-App
      - name: Copy file via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          port: ${{ secrets.PORT }}
          source: "**"
          target: "/var/www/${{ secrets.USERNAME }}/nextjsquiz"
          rm: "true"
